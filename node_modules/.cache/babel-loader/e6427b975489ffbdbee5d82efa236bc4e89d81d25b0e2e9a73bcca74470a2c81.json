{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { postsByUser, selectedPost } from \"../../api/requests\";\nimport { setPostsByUser, setPost } from \"../../redux/slice/users\";\nexport const usePosts = () => {\n  _s();\n  const dispatch = useDispatch();\n  const post = useSelector(state => state.data.post);\n  const posts = useSelector(state => state.data.postsByUser);\n  const getPost = id => {\n    selectedPost(id).then(({\n      data\n    }) => dispatch(setPost(data))).catch(error => toast.error(error));\n  };\n  const getPostsByUsers = id => {\n    postsByUser(id).then(({\n      data\n    }) => dispatch(setPostsByUser(data))).catch(error => toast.error(error));\n  };\n  return {\n    post,\n    posts,\n    getPost,\n    getPostsByUsers\n  };\n};\n_s(usePosts, \"9vzDpuk2vUHVJaSKCVlfzMwH61U=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});","map":{"version":3,"names":["useDispatch","useSelector","toast","postsByUser","selectedPost","setPostsByUser","setPost","usePosts","_s","dispatch","post","state","data","posts","getPost","id","then","catch","error","getPostsByUsers"],"sources":["/Users/macbook/Documents/Own projects/albums/src/hooks/api/usePosts.ts"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\n\nimport { postsByUser, selectedPost } from \"../../api/requests\";\nimport { setPostsByUser, setPost } from \"../../redux/slice/users\";\n\nimport { IPost } from \"../../types/response\";\nimport { RootState } from \"../../redux/store\";\n\ninterface IUsePosts {\n    post: IPost | null;\n    posts: IPost[];\n    getPost: (id: number) => void;\n    getPostsByUsers: (id: number) => void;\n}\n\nexport const usePosts = (): IUsePosts => {\n    const dispatch = useDispatch();\n\n    const post = useSelector((state: RootState) => state.data.post);\n\n    const posts = useSelector((state: RootState) => state.data.postsByUser);\n\n    const getPost = (id: number) => {\n        selectedPost(id)\n            .then(({ data }) => dispatch(setPost(data)))\n            .catch((error) => toast.error(error));\n    };\n\n    const getPostsByUsers = (id: number) => {\n        postsByUser(id)\n            .then(({ data }) => dispatch(setPostsByUser(data)))\n            .catch((error) => toast.error(error));\n    };\n\n    return {\n        post,\n        posts,\n        getPost,\n        getPostsByUsers,\n    };\n};"],"mappings":";AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,SAASC,WAAW,EAAEC,YAAY,QAAQ,oBAAoB;AAC9D,SAASC,cAAc,EAAEC,OAAO,QAAQ,yBAAyB;AAYjE,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAiB;EAAAC,EAAA;EACrC,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,IAAI,GAAGT,WAAW,CAAEU,KAAgB,IAAKA,KAAK,CAACC,IAAI,CAACF,IAAI,CAAC;EAE/D,MAAMG,KAAK,GAAGZ,WAAW,CAAEU,KAAgB,IAAKA,KAAK,CAACC,IAAI,CAACT,WAAW,CAAC;EAEvE,MAAMW,OAAO,GAAIC,EAAU,IAAK;IAC5BX,YAAY,CAACW,EAAE,CAAC,CACXC,IAAI,CAAC,CAAC;MAAEJ;IAAK,CAAC,KAAKH,QAAQ,CAACH,OAAO,CAACM,IAAI,CAAC,CAAC,CAAC,CAC3CK,KAAK,CAAEC,KAAK,IAAKhB,KAAK,CAACgB,KAAK,CAACA,KAAK,CAAC,CAAC;EAC7C,CAAC;EAED,MAAMC,eAAe,GAAIJ,EAAU,IAAK;IACpCZ,WAAW,CAACY,EAAE,CAAC,CACVC,IAAI,CAAC,CAAC;MAAEJ;IAAK,CAAC,KAAKH,QAAQ,CAACJ,cAAc,CAACO,IAAI,CAAC,CAAC,CAAC,CAClDK,KAAK,CAAEC,KAAK,IAAKhB,KAAK,CAACgB,KAAK,CAACA,KAAK,CAAC,CAAC;EAC7C,CAAC;EAED,OAAO;IACHR,IAAI;IACJG,KAAK;IACLC,OAAO;IACPK;EACJ,CAAC;AACL,CAAC;AAACX,EAAA,CAzBWD,QAAQ;EAAA,QACAP,WAAW,EAEfC,WAAW,EAEVA,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}