{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { albumsByUser, photosByAlbum } from \"../../api/requests\";\nimport { setAlbumsByUser, setPhotos } from \"../../redux/slice/users\";\nexport const useAlbums = () => {\n  _s();\n  const dispatch = useDispatch();\n  const albums = useSelector(state => state.data.albumsByUser);\n  const photos = useSelector(state => state.data.photos);\n  const getAlbumsByUser = userId => {\n    albumsByUser(userId).then(({\n      data\n    }) => dispatch(setAlbumsByUser(data))).catch(error => toast.error(error));\n  };\n  const getPhotos = albumId => {\n    photosByAlbum(albumId).then(({\n      data\n    }) => dispatch(setPhotos(data))).catch(error => toast.error(error));\n  };\n  return {\n    albums,\n    photos,\n    getAlbumsByUser,\n    getPhotos\n  };\n};\n_s(useAlbums, \"t3Xrt8zw++BZUVnTo1VU5XLnNt0=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});","map":{"version":3,"names":["useDispatch","useSelector","toast","albumsByUser","photosByAlbum","setAlbumsByUser","setPhotos","useAlbums","_s","dispatch","albums","state","data","photos","getAlbumsByUser","userId","then","catch","error","getPhotos","albumId"],"sources":["/Users/macbook/Documents/Own projects/albums/src/hooks/api/useAlbums.tsx"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\n\nimport { albumsByUser, photosByAlbum } from \"../../api/requests\";\nimport { setAlbumsByUser, setPhotos } from \"../../redux/slice/users\";\n\nimport { IAlbum, IPhoto } from \"../../types/response\";\nimport { RootState } from \"../../redux/store\";\n\ninterface IUseAlbums {\n    albums: IAlbum[];\n    photos: IPhoto[];\n    getAlbumsByUser: (userId: number) => void;\n    getPhotos: (albumId: number) => void;\n}\n\nexport const useAlbums = (): IUseAlbums => {\n    const dispatch = useDispatch();\n\n    const albums = useSelector((state: RootState) => state.data.albumsByUser);\n\n    const photos = useSelector((state: RootState) => state.data.photos);\n\n    const getAlbumsByUser = (userId: number) => {\n        albumsByUser(userId)\n            .then(({ data }) => dispatch(setAlbumsByUser(data)))\n            .catch((error) => toast.error(error));\n    };\n\n    const getPhotos = (albumId: number) => {\n        photosByAlbum(albumId)\n            .then(({ data }) => dispatch(setPhotos(data)))\n            .catch((error) => toast.error(error));\n    };\n\n    return {\n        albums,\n        photos,\n        getAlbumsByUser,\n        getPhotos,\n    };\n};"],"mappings":";AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,SAASC,YAAY,EAAEC,aAAa,QAAQ,oBAAoB;AAChE,SAASC,eAAe,EAAEC,SAAS,QAAQ,yBAAyB;AAYpE,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAkB;EAAAC,EAAA;EACvC,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,MAAM,GAAGT,WAAW,CAAEU,KAAgB,IAAKA,KAAK,CAACC,IAAI,CAACT,YAAY,CAAC;EAEzE,MAAMU,MAAM,GAAGZ,WAAW,CAAEU,KAAgB,IAAKA,KAAK,CAACC,IAAI,CAACC,MAAM,CAAC;EAEnE,MAAMC,eAAe,GAAIC,MAAc,IAAK;IACxCZ,YAAY,CAACY,MAAM,CAAC,CACfC,IAAI,CAAC,CAAC;MAAEJ;IAAK,CAAC,KAAKH,QAAQ,CAACJ,eAAe,CAACO,IAAI,CAAC,CAAC,CAAC,CACnDK,KAAK,CAAEC,KAAK,IAAKhB,KAAK,CAACgB,KAAK,CAACA,KAAK,CAAC,CAAC;EAC7C,CAAC;EAED,MAAMC,SAAS,GAAIC,OAAe,IAAK;IACnChB,aAAa,CAACgB,OAAO,CAAC,CACjBJ,IAAI,CAAC,CAAC;MAAEJ;IAAK,CAAC,KAAKH,QAAQ,CAACH,SAAS,CAACM,IAAI,CAAC,CAAC,CAAC,CAC7CK,KAAK,CAAEC,KAAK,IAAKhB,KAAK,CAACgB,KAAK,CAACA,KAAK,CAAC,CAAC;EAC7C,CAAC;EAED,OAAO;IACHR,MAAM;IACNG,MAAM;IACNC,eAAe;IACfK;EACJ,CAAC;AACL,CAAC;AAACX,EAAA,CAzBWD,SAAS;EAAA,QACDP,WAAW,EAEbC,WAAW,EAEXA,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}