{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { albumsByUser, photosByAlbum, selectedPhoto } from \"../../api/requests\";\nimport { setAlbumsByUser, setPhotos, setPhoto } from \"../../redux/slice/users\";\nexport const useAlbums = () => {\n  _s();\n  const dispatch = useDispatch();\n  const albums = useSelector(state => state.data.albumsByUser);\n  const photos = useSelector(state => state.data.photos);\n  const photo = useSelector(state => state.data.photo);\n  const getAlbumsByUser = userId => {\n    albumsByUser(userId).then(({\n      data\n    }) => dispatch(setAlbumsByUser(data))).catch(error => toast.error(error));\n  };\n  const getPhotos = albumId => {\n    photosByAlbum(albumId).then(({\n      data\n    }) => dispatch(setPhotos(data))).catch(error => toast.error(error));\n  };\n  const getPhoto = photoId => {\n    selectedPhoto(photoId).then(({\n      data\n    }) => dispatch(setPhoto(data))).catch(error => toast.error(error));\n  };\n  const clearPhotos = () => dispatch(setPhotos([]));\n  const clearPhoto = () => dispatch(setPhoto(null));\n  return {\n    albums,\n    photos,\n    photo,\n    getAlbumsByUser,\n    getPhotos,\n    getPhoto,\n    clearPhotos,\n    clearPhoto\n  };\n};\n_s(useAlbums, \"AwsJNfrDN40x0FyFL93fFHy9KGc=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});","map":{"version":3,"names":["useDispatch","useSelector","toast","albumsByUser","photosByAlbum","selectedPhoto","setAlbumsByUser","setPhotos","setPhoto","useAlbums","_s","dispatch","albums","state","data","photos","photo","getAlbumsByUser","userId","then","catch","error","getPhotos","albumId","getPhoto","photoId","clearPhotos","clearPhoto"],"sources":["/Users/macbook/Documents/Own projects/albums/src/hooks/api/useAlbums.tsx"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\n\nimport { albumsByUser, photosByAlbum, selectedPhoto } from \"../../api/requests\";\nimport { setAlbumsByUser, setPhotos, setPhoto } from \"../../redux/slice/users\";\n\nimport { IAlbum, IPhoto } from \"../../types/response\";\nimport { RootState } from \"../../redux/store\";\n\ninterface IUseAlbums {\n    albums: IAlbum[];\n    photos: IPhoto[];\n    photo: IPhoto | null;\n    getAlbumsByUser: (userId: number) => void;\n    getPhotos: (albumId: number) => void;\n    getPhoto: (photoId: number) => void;\n    clearPhotos: () => void;\n    clearPhoto: () => void;\n}\n\nexport const useAlbums = (): IUseAlbums => {\n    const dispatch = useDispatch();\n\n    const albums = useSelector((state: RootState) => state.data.albumsByUser);\n\n    const photos = useSelector((state: RootState) => state.data.photos);\n\n    const photo = useSelector((state: RootState) => state.data.photo);\n\n    const getAlbumsByUser = (userId: number) => {\n        albumsByUser(userId)\n            .then(({ data }) => dispatch(setAlbumsByUser(data)))\n            .catch((error) => toast.error(error));\n    };\n\n    const getPhotos = (albumId: number) => {\n        photosByAlbum(albumId)\n            .then(({ data }) => dispatch(setPhotos(data)))\n            .catch((error) => toast.error(error));\n    };\n\n    const getPhoto = (photoId: number) => {\n        selectedPhoto(photoId)\n            .then(({ data }) => dispatch(setPhoto(data)))\n            .catch((error) => toast.error(error));\n    };\n\n    const clearPhotos = () => dispatch(setPhotos([]));\n\n    const clearPhoto = () => dispatch(setPhoto(null));\n\n    return {\n        albums,\n        photos,\n        photo,\n        getAlbumsByUser,\n        getPhotos,\n        getPhoto,\n        clearPhotos,\n        clearPhoto,\n    };\n};"],"mappings":";AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,SAASC,YAAY,EAAEC,aAAa,EAAEC,aAAa,QAAQ,oBAAoB;AAC/E,SAASC,eAAe,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,yBAAyB;AAgB9E,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAkB;EAAAC,EAAA;EACvC,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,MAAM,GAAGX,WAAW,CAAEY,KAAgB,IAAKA,KAAK,CAACC,IAAI,CAACX,YAAY,CAAC;EAEzE,MAAMY,MAAM,GAAGd,WAAW,CAAEY,KAAgB,IAAKA,KAAK,CAACC,IAAI,CAACC,MAAM,CAAC;EAEnE,MAAMC,KAAK,GAAGf,WAAW,CAAEY,KAAgB,IAAKA,KAAK,CAACC,IAAI,CAACE,KAAK,CAAC;EAEjE,MAAMC,eAAe,GAAIC,MAAc,IAAK;IACxCf,YAAY,CAACe,MAAM,CAAC,CACfC,IAAI,CAAC,CAAC;MAAEL;IAAK,CAAC,KAAKH,QAAQ,CAACL,eAAe,CAACQ,IAAI,CAAC,CAAC,CAAC,CACnDM,KAAK,CAAEC,KAAK,IAAKnB,KAAK,CAACmB,KAAK,CAACA,KAAK,CAAC,CAAC;EAC7C,CAAC;EAED,MAAMC,SAAS,GAAIC,OAAe,IAAK;IACnCnB,aAAa,CAACmB,OAAO,CAAC,CACjBJ,IAAI,CAAC,CAAC;MAAEL;IAAK,CAAC,KAAKH,QAAQ,CAACJ,SAAS,CAACO,IAAI,CAAC,CAAC,CAAC,CAC7CM,KAAK,CAAEC,KAAK,IAAKnB,KAAK,CAACmB,KAAK,CAACA,KAAK,CAAC,CAAC;EAC7C,CAAC;EAED,MAAMG,QAAQ,GAAIC,OAAe,IAAK;IAClCpB,aAAa,CAACoB,OAAO,CAAC,CACjBN,IAAI,CAAC,CAAC;MAAEL;IAAK,CAAC,KAAKH,QAAQ,CAACH,QAAQ,CAACM,IAAI,CAAC,CAAC,CAAC,CAC5CM,KAAK,CAAEC,KAAK,IAAKnB,KAAK,CAACmB,KAAK,CAACA,KAAK,CAAC,CAAC;EAC7C,CAAC;EAED,MAAMK,WAAW,GAAGA,CAAA,KAAMf,QAAQ,CAACJ,SAAS,CAAC,EAAE,CAAC,CAAC;EAEjD,MAAMoB,UAAU,GAAGA,CAAA,KAAMhB,QAAQ,CAACH,QAAQ,CAAC,IAAI,CAAC,CAAC;EAEjD,OAAO;IACHI,MAAM;IACNG,MAAM;IACNC,KAAK;IACLC,eAAe;IACfK,SAAS;IACTE,QAAQ;IACRE,WAAW;IACXC;EACJ,CAAC;AACL,CAAC;AAACjB,EAAA,CAzCWD,SAAS;EAAA,QACDT,WAAW,EAEbC,WAAW,EAEXA,WAAW,EAEZA,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}